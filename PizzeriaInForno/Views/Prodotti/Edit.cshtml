@model PizzeriaInForno.Models.Prodotti

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Prodotti", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDProdotto)

        <div class="form-group my-3">
            @Html.LabelFor(model => model.NomeProd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeProd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeProd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group my-3">
            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Foto != null)
                {
                    <p>Current file: @Model.Foto</p>
                }
                <input type="file" name="file" class="form-control" />
                @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group my-3">
            @Html.LabelFor(model => model.Prezzo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ Html.EnableClientValidation(false); }
                @Html.EditorFor(model => model.Prezzo, new { htmlAttributes = new { @class = "form-control" } })
                @{ Html.EnableClientValidation(true); }
                @Html.ValidationMessageFor(model => model.Prezzo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group my-3">
            @Html.LabelFor(model => model.ConsMin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConsMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConsMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group my-3">
            @Html.LabelFor(model => model.Ingredienti, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ingredienti, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ingredienti, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group my-3">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-warning btn-cst-red">
                    <i class="bi bi-check2-square"></i>
                </button>
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-warning btn-cst-red">
        <i class="bi bi-arrow-left-square"></i> Back
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
